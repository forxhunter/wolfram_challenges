(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    136888,       3046]
NotebookOptionsPosition[    112897,       2602]
NotebookOutlinePosition[    128480,       2904]
CellTagsIndexPosition[    128408,       2899]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Cellular Automaton Transients", "Title",ExpressionUUID->"3faf7c78-257d-45f3-a607-fb2df752ccaf"],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      StyleBox["\<\"THE CHALLENGE\"\>",
       StripOnInput->False,
       FontFamily->"Source Sans Pro",
       FontSize->18,
       FontWeight->Plain,
       FontColor->GrayLevel[1]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Grid"],
  Background->RGBColor[0.9961, 0.3098, 0.21569],
  FrameMargins->{{13, 13}, {2, 8}},
  FrameStyle->None,
  ImageMargins->{{0, 0}, {-2, 0}},
  StripOnInput->False]], "WCIntroDivider",
 CellMargins->{{66, 0}, {-2, 
  37}},ExpressionUUID->"10e2ac5a-f097-49a2-9f69-edebb552a9c7"],

Cell["", "WCIntroDividerLine",ExpressionUUID->"401d4a3a-0bd6-4398-b096-fde48478d0c7"],

Cell["\<\
Find the length of a transient in a cellular automaton evolution.\
\>", "Description",ExpressionUUID->"9a83591c-2080-41db-8aab-066a55382070"],

Cell[CellGroupData[{

Cell["More Details", "Section",ExpressionUUID->"08fc7818-1e8c-49c7-9839-4aca148bbc5a"],

Cell["\<\
For a finite initial condition, a cellular automaton eventually repeats, but \
there may be a transient consisting of the rows before the repetition starts.\
\
\>", "Text",ExpressionUUID->"20301806-cb1c-4eb2-903a-05843e9cf9f7"],

Cell["\<\
For example, this evolution starts repeating on the fourth row (after three \
steps), so its transient length is three:\
\>", "Text",ExpressionUUID->"062cd0f3-45a1-4599-ae83-328fb5f9c095"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CellularAutomaton", "[", 
  RowBox[{"45", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", "6"}], 
  "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[1]:=",ExpressionUUID->"c15d1859-20d5-456e-840f-217561c5d84d"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[1]=",ExpressionUUID->"58dcbae6-5345-400a-897e-c1ecf72e30a8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"%", ",", 
   RowBox[{"Mesh", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[2]:=",ExpressionUUID->"ae8ec7f3-fef1-4786-969c-08368908b117"],

Cell[BoxData[
 GraphicsBox[{
   RasterBox[{{1, 1, 1, 1}, {0, 0, 0, 0}, {1, 1, 1, 1}, {0, 0, 0, 0}, {0, 1, 
    0, 1}, {1, 1, 0, 1}, {1, 1, 0, 0}}, {{0, 0}, {4, 7}}, {0, 1}], {
    {GrayLevel[
      NCache[-1 + GoldenRatio, 0.6180339887498949]], 
     StyleBox[
      LineBox[{{{0, 7}, {4, 7}}, {{0, 6}, {4, 6}}, {{0, 5}, {4, 5}}, {{0, 
       4}, {4, 4}}, {{0, 3}, {4, 3}}, {{0, 2}, {4, 2}}, {{0, 1}, {4, 1}}, {{0,
        0}, {4, 0}}}],
      Antialiasing->False]}, 
    {GrayLevel[
      NCache[-1 + GoldenRatio, 0.6180339887498949]], 
     StyleBox[
      LineBox[{{{0, 0}, {0, 7}}, {{1, 0}, {1, 7}}, {{2, 0}, {2, 7}}, {{3, 
       0}, {3, 7}}, {{4, 0}, {4, 7}}}],
      Antialiasing->False]}}},
  Frame->False,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Small,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[2]=",ExpressionUUID->"1d2064de-0aab-4661-bd71-c42bc612e47c"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["What Your Function Should Do", "Section",ExpressionUUID->"2d6bbd58-2f22-4b6c-bbf7-301634bc0c1a"],

Cell[TextData[{
 "Write a function called ",
 StyleBox["CATransientLength", "InlineCode"],
 " that takes as input a rule number, an initial condition and the maximum \
number of steps to perform. It should return the length of the smallest \
transient, making the periodic part start as early as possible."
}], "Text",ExpressionUUID->"ebd49c4e-c4da-4def-ad52-1ce75967891e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["CATransientLength",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{"45", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "1"}], "}"}], ",", "6"}], 
  "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[3]:=",ExpressionUUID->"3fba8b09-eafd-4e5b-a79f-5bcbd18344a8"],

Cell[BoxData["3"], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[3]=",ExpressionUUID->"735fc8a5-1743-4094-860b-830f0b5d7b32"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["CATransientLength",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{"30", ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0",
      ",", "0", ",", "0"}], "}"}], ",", "100"}], "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[4]:=",ExpressionUUID->"3f35f0aa-3db9-45c3-a240-5ed07b7764f1"],

Cell[BoxData["24"], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[4]=",ExpressionUUID->"247047ac-00fb-41ac-8f8a-bcfdb99e2a50"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["CATransientLength",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{"149", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   "1000"}], "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[5]:=",ExpressionUUID->"0992377a-79e6-419b-9c72-de1ff0da659b"],

Cell[BoxData["5"], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[5]=",ExpressionUUID->"d36d86da-aaff-47aa-9be6-07c637d02194"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["More Examples", "Subsection",ExpressionUUID->"6614c76b-3cff-4e3b-8fae-31969d8119b5"],

Cell["\<\
If there are not enough steps to span the transient and then the period \
twice, the entire evolution seen is viewed as transient:\
\>", "Text",ExpressionUUID->"0e378035-87a9-4019-b1d9-e725d1a1534f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["CATransientLength",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{"169", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1",
      ",", "1", ",", "1"}], "}"}], ",", "50"}], "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[6]:=",ExpressionUUID->"7653e421-dde5-40c3-be44-ca77fd563864"],

Cell[BoxData["51"], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[6]=",ExpressionUUID->"eb3b5d32-01af-4dab-a4b3-7feeed8e1c54"]
}, Open  ]],

Cell["\<\
Rule 169 with this initial condition eventually repeats with period 205. \
Specifying the maximum steps to be large enough gives the true transient:\
\>", "Text",ExpressionUUID->"cf2c8eb7-cb0f-435b-9462-50a2f6c5719e"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["CATransientLength",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{"169", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1",
      ",", "1", ",", "1"}], "}"}], ",", "412"}], "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[7]:=",ExpressionUUID->"acb71fda-91de-4ddf-b426-5632eb674075"],

Cell[BoxData["413"], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[7]=",ExpressionUUID->"dfcab146-3a3c-4678-970a-f1c71426cd3d"]
}, Open  ]],

Cell[TextData[{
 "This is large enough (",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     RowBox[{"2", "\[Times]", "205"}], "+", "4", "-", "1"}], "=", "413"}], 
   TraditionalForm]],ExpressionUUID->"15692079-fc6f-4f7b-ad91-604d566c1aa4"],
 "):"
}], "Text",ExpressionUUID->"61c438f1-7285-49e8-8450-78ece85b0338"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["CATransientLength",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{"169", ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1",
      ",", "1", ",", "1"}], "}"}], ",", "413"}], "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[8]:=",ExpressionUUID->"179ee1d0-ca61-4e04-8e7b-6aa107a14099"],

Cell[BoxData["4"], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[8]=",ExpressionUUID->"184a03f5-9e9b-428d-baf0-83a704cf3117"]
}, Open  ]],

Cell["\<\
This configuration starts out periodic and hence has no transient:\
\>", "Text",ExpressionUUID->"84ca604e-8dd3-4ae9-ae08-604f47c0f636"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  StyleBox["CATransientLength",
   StripOnInput->True,
   FontColor->GrayLevel[0]], "[", 
  RowBox[{"150", ",", 
   RowBox[{"{", 
    RowBox[{"0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}],
     "}"}], ",", "50"}], "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[9]:=",ExpressionUUID->"2a556dd4-0e8e-4562-afb4-6c8eb4799332"],

Cell[BoxData["0"], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[9]=",ExpressionUUID->"c278d726-4705-4675-8be4-cf8a4be6fbdb"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{
   RowBox[{"CellularAutomaton", "[", 
    RowBox[{"150", ",", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "0"}], 
      "}"}], ",", "15"}], "]"}], ",", 
   RowBox[{"Mesh", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]], "Input",
 Editable->False,
 Evaluatable->False,
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"In[10]:=",ExpressionUUID->"00e4ff64-f1f8-4795-ac53-c4ec4a121b0b"],

Cell[BoxData[
 GraphicsBox[{
   RasterBox[{{1, 1, 0, 0, 0, 1, 1}, {1, 1, 1, 0, 1, 1, 1}, {0, 1, 0, 0, 0, 1,
     0}, {1, 0, 0, 0, 0, 0, 1}, {0, 1, 1, 0, 1, 1, 0}, {0, 0, 1, 0, 1, 0, 
    0}, {1, 0, 1, 0, 1, 0, 1}, {1, 1, 0, 0, 0, 1, 1}, {1, 1, 1, 0, 1, 1, 1}, {
    0, 1, 0, 0, 0, 1, 0}, {1, 0, 0, 0, 0, 0, 1}, {0, 1, 1, 0, 1, 1, 0}, {0, 0,
     1, 0, 1, 0, 0}, {1, 0, 1, 0, 1, 0, 1}, {1, 1, 0, 0, 0, 1, 1}, {1, 1, 1, 
    0, 1, 1, 1}}, {{0, 0}, {7, 16}}, {0, 1}], {
    {GrayLevel[
      NCache[-1 + GoldenRatio, 0.6180339887498949]], 
     StyleBox[
      LineBox[{{{0, 16}, {7, 16}}, {{0, 15}, {7, 15}}, {{0, 14}, {7, 14}}, {{
       0, 13}, {7, 13}}, {{0, 12}, {7, 12}}, {{0, 11}, {7, 11}}, {{0, 10}, {7,
        10}}, {{0, 9}, {7, 9}}, {{0, 8}, {7, 8}}, {{0, 7}, {7, 7}}, {{0, 6}, {
       7, 6}}, {{0, 5}, {7, 5}}, {{0, 4}, {7, 4}}, {{0, 3}, {7, 3}}, {{0, 
       2}, {7, 2}}, {{0, 1}, {7, 1}}, {{0, 0}, {7, 0}}}],
      Antialiasing->False]}, 
    {GrayLevel[
      NCache[-1 + GoldenRatio, 0.6180339887498949]], 
     StyleBox[
      LineBox[{{{0, 0}, {0, 16}}, {{1, 0}, {1, 16}}, {{2, 0}, {2, 16}}, {{3, 
       0}, {3, 16}}, {{4, 0}, {4, 16}}, {{5, 0}, {5, 16}}, {{6, 0}, {6, 
       16}}, {{7, 0}, {7, 16}}}],
      Antialiasing->False]}}},
  Frame->False,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->Small,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellLabelAutoDelete->False,
 FontSize->14,
 CellLabel->"Out[10]=",ExpressionUUID->"b1892183-e3a7-4048-a951-336a2b82a453"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Things You May Find Useful", "Section",ExpressionUUID->"1df93852-8c60-4211-aa36-10ba536c0dd0"],

Cell[BoxData[
 TemplateBox[{"\"Elementary Cellular Automaton \[RightGuillemet]\"", {
    URL["http://mathworld.wolfram.com/ElementaryCellularAutomaton.html"], 
    None}, "http://mathworld.wolfram.com/ElementaryCellularAutomaton.html", 
   "Hyperlink", {"Text", 
    RGBColor[0.21176470588235294`, 0.6941176470588235, 0.7490196078431373]}, 
   BaseStyle -> {"Text", 
     RGBColor[0.996078431372549, 0.3058823529411765, 0.21568627450980393`]}},
  "HyperlinkTemplate"]], "Text",ExpressionUUID->"803df727-a6b0-4a89-95ca-\
7089d483e922"],

Cell[TextData[StyleBox[ButtonBox["A New Kind of Science",
 BaseStyle->"Hyperlink",
 ButtonData->{
   URL["http://www.wolframscience.com/nks/"], None},
 ButtonNote->"http://www.wolframscience.com/nks/"],
 FontSlant->"Italic"]], "Text",ExpressionUUID->"4dd90141-ff3a-4a69-876e-\
10bddf0a176a"]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      StyleBox["\<\"SCRATCH AREA\"\>",
       StripOnInput->False,
       FontFamily->"Source Sans Pro",
       FontSize->18,
       FontWeight->Plain,
       FontColor->GrayLevel[1]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Grid"],
  Background->GrayLevel[0.65],
  FrameMargins->{{13, 13}, {2, 5}},
  FrameStyle->None,
  ImageMargins->{{0, 0}, {-2, 0}},
  StripOnInput->False]], "WCIntroDivider",
 CellGroupingRules->{
  "SectionGrouping", 
   0},ExpressionUUID->"309bd27c-1285-4198-b394-278d1b30fb0c"],

Cell[BoxData[""], "WCIntroDividerLine",
 CellFrameColor->GrayLevel[
  0.65],ExpressionUUID->"101f5e0b-335e-4b54-89a8-41cd2717833b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"rn", "=", "181"}]], "Input",
 CellChangeTimes->{{3.833144075706755*^9, 3.833144077195754*^9}, {
  3.8331450780890303`*^9, 3.833145079074374*^9}, {3.833145181121294*^9, 
  3.833145181307922*^9}, {3.8331455674122133`*^9, 3.8331455709542265`*^9}, {
  3.833154271400936*^9, 3.8331542722707005`*^9}, {3.833156417996488*^9, 
  3.8331564189203634`*^9}, {3.8331565485048714`*^9, 3.8331565487271996`*^9}},
 CellLabel->
  "In[150]:=",ExpressionUUID->"5b7df2eb-f973-476a-9286-31a5212bda28"],

Cell[BoxData["181"], "Output",
 CellChangeTimes->{3.8331440774946055`*^9, 3.8331450877026796`*^9, 
  3.8331451924465723`*^9, 3.833145572613154*^9, 3.8331542738078365`*^9, 
  3.833156426794963*^9, 3.833156573044916*^9},
 CellLabel->
  "Out[150]=",ExpressionUUID->"4ab5ecef-c6b9-43e0-a090-2cf41009e2e0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"init", "=", 
  RowBox[{"{", 
   RowBox[{
   "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", 
    ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",",
     "1", ",", "0", ",", "1"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.8331440791234818`*^9, 3.8331440859205017`*^9}, 
   3.8331450818704367`*^9, {3.8331451853159604`*^9, 3.8331451855528884`*^9}, {
   3.8331455757311163`*^9, 3.833145583691201*^9}, {3.8331542824518337`*^9, 
   3.8331543201225243`*^9}, 3.833156422661869*^9, {3.8331565564108458`*^9, 
   3.8331565685170755`*^9}},
 CellLabel->
  "In[151]:=",ExpressionUUID->"ba9db661-6341-4cab-b978-3243e4ea77bd"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", 
   "1", ",", "0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.8331440870463867`*^9, 3.833145089860015*^9, 
  3.8331451941156883`*^9, 3.8331455850243387`*^9, 3.8331543220824537`*^9, 
  3.833156428090498*^9, 3.8331565781001663`*^9},
 CellLabel->
  "Out[151]=",ExpressionUUID->"fd0f6478-4f15-4eca-9d4d-8338ddaeec59"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"t", "=", "144"}]], "Input",
 CellChangeTimes->{{3.83314408924275*^9, 3.8331440897239094`*^9}, {
  3.8331450831952653`*^9, 3.833145084261161*^9}, {3.8331451869115486`*^9, 
  3.833145190926645*^9}, {3.8331455879219913`*^9, 3.833145588482128*^9}, {
  3.833154275514864*^9, 3.8331542768885293`*^9}, {3.8331564243067207`*^9, 
  3.8331564254390745`*^9}, {3.8331565527608337`*^9, 3.833156554554268*^9}},
 CellLabel->
  "In[152]:=",ExpressionUUID->"64b76381-0365-4818-aef2-65a283fa46ec"],

Cell[BoxData["144"], "Output",
 CellChangeTimes->{3.8331440899961634`*^9, 3.833145094862693*^9, 
  3.8331451954248953`*^9, 3.833145588809787*^9, 3.833154323932582*^9, 
  3.8331564294186172`*^9, 3.833156579402631*^9},
 CellLabel->
  "Out[152]=",ExpressionUUID->"e723a1c8-cd8f-4cac-a181-8fcc62b83bc8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"result", "=", 
  RowBox[{"CellularAutomaton", "[", 
   RowBox[{"rn", ",", "init", ",", "t"}], "]"}]}]], "Input",
 CellLabel->
  "In[153]:=",ExpressionUUID->"5bc9f025-2f38-4adb-ae5d-74decece4878"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0",
      ",", "0", ",", "0", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", 
     ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1",
      ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", 
     ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1",
      ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", 
     ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", 
     ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1",
      ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", 
     ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0",
      ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", 
     ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0",
      ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", 
     ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", 
     ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", 
     ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", 
     ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
     ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1",
      ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", 
     ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", 
     ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1",
      ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", 
     ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1",
      ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", 
     ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", 
     ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0",
      ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", 
     ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", 
     ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1",
      ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1",
      ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", 
     ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0",
      ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", 
     ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", 
     ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0",
      ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", 
     ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", 
     ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", 
     ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
     ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1",
      ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", 
     ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", 
     ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1",
      ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", 
     ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1",
      ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", 
     ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", 
     ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0",
      ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", 
     ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1",
      ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1",
      ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", 
     ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0",
      ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", 
     ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0",
      ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", 
     ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", 
     ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", 
     ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
     ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1",
      ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", 
     ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", 
     ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1",
      ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", 
     ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", 
     ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1",
      ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", 
     ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1",
      ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", 
     ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0",
      ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", 
     ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1",
      ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", 
     ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0",
      ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", 
     ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0",
      ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", 
     ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", 
     ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", 
     ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", 
     ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
     ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1",
      ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", 
     ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", 
     ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1",
      ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", 
     ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1",
      ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", 
     ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1",
      ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", 
     ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", 
     ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1",
      ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", 
     ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0",
      ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", 
     ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0",
      ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", 
     ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", 
     ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", 
     ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", 
     ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
     ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1",
      ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", 
     ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", 
     ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1",
      ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", 
     ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1",
      ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", 
     ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", 
     ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0",
      ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", 
     ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", 
     ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1",
      ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1",
      ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", 
     ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0",
      ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", 
     ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", 
     ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0",
      ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", 
     ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", 
     ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", 
     ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
     ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1",
      ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", 
     ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", 
     ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1",
      ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", 
     ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1",
      ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", 
     ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", 
     ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", 
     ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0",
      ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", 
     ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1",
      ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1",
      ",", "1", ",", "0", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", 
     ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0",
      ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", 
     ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0",
      ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", 
     ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", 
     ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", 
     ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
     ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1",
      ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", 
     ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", 
     ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1",
      ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", 
     ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1",
      ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", 
     ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1",
      ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", 
     ",", "0", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1",
      ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", 
     ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0",
      ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "0", 
     ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1",
      ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", 
     ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0",
      ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", 
     ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", 
     ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0",
      ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", 
     ",", "0", ",", "1", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", 
     ",", "1", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", 
     ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "0",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "1", ",", "1", 
     ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0",
      ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "0", 
     ",", "1", ",", "0", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1",
      ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", 
     ",", "1", ",", "1", ",", "0"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "0", ",", "0", ",", "1", ",", "0", ",", "1", ",", "0", ",", "1", ",", "1",
      ",", "1", ",", "0", ",", "1", ",", "1", ",", "0", ",", "0", ",", "1", 
     ",", "0", ",", "0", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "0", ",", "1", ",", "1", ",", "1", ",", "1", ",", "0", ",", "1",
      ",", "0", ",", "1", ",", "0", ",", "0", ",", "1", ",", "0", ",", "1", 
     ",", "1", ",", "0", ",", "1"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.833144288398117*^9, 3.8331453475631638`*^9, 
  3.833145592642132*^9, 3.833154325757475*^9, 3.8331558019187994`*^9, 
  3.8331564315143385`*^9, 3.8331565812262554`*^9},
 CellLabel->
  "Out[153]=",ExpressionUUID->"59dfc9c2-2571-4e77-a34d-8c1f56f1c628"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"result", ",", 
   RowBox[{"Mesh", "\[Rule]", "True"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]], "Input",
 CellLabel->
  "In[154]:=",ExpressionUUID->"d42434bd-071c-4c23-ae4b-6d5d78876d71"],

Cell[BoxData[
 GraphicsBox[{RasterBox[CompressedData["
1:eJyNk4FxwkAMBKWUkA5oKSXQQGpJxzHYsm7v336GMQy8kPSr1eP5+/P8ioi/
7fnensj9bXu93uoz95N8f43ja0Uc5xKRyRzHDxoRkr1+jvuIOpYq2X/toPfT
EXWh6uPoTKpkBIr37c7Uddh9XBPqPhDhtzNCTjktx967E7IcHlHHRsgiIqxK
KsMmhEkZQ3HHCPE6J8N7Qjqps4UloQ8ou4eof03I55CsYh62UgMhlBCGQogu
c4bKcEXIXA70ce7y0sNkjphaxhwzU+lhaeeEfNuFoQzcCQ3bHt0HPAQhujwn
pJMSD0DIXY5kjj1oIJTj/deEfA7JKuahCO+E4LIwFEJ0mSPmLt8T0knpHRab
6h4OlGeWWY6JqYbTKRf2gRBdJkPzUAjRZdSHhytC622fEfqAsnuI+teEfA7J
KuZhKzUQQglhKIToMmfIXb4ntN72burGw2SOmFrGHDNT6WFp54R824WhDNwJ
Ddse3Qc8BCG6PCfUECriH+7EBrM=
    "], {{0, 0}, {18, 145}}, {0, 1}], {
    {GrayLevel[
      NCache[-1 + GoldenRatio, 0.6180339887498949]], 
     StyleBox[LineBox[CompressedData["
1:eJwtw2c3EAAAQNGH7P1kJjJSMkJFSEhGhLI3KaNklJWVHTJKv7g+dM+5WZOL
XZNBwJ9/A//n2mt++5tf/uLKKy695MILzj3npz8584xTTznxhB/+4Nhjjjzi
0EMOPGDfffbcY9ddvvudHXfYdpstt9h0kw03+OY31l1nzTVWXWXFFZZd5qtf
+eIXllxi0UUWXGDeeT77mTnn+OQnPvqRWWeZcYZpp5lyig9+4L3vmXSSd75j
wgnGHWfMMUYdZcQRhh1myCEGHWTAAfrtp88+eu2lxx667abLLt76lje+odNO
Ouyg3XZe+5o222i1lVe+osUWmm2mySYabeSlL2mwgRe+oN566qyj1lqe+5wa
a3jmM6qtpsoqKq3kqU+psIJyy3niEx77mEc+oswySi2lxBIe+pBiiymyiEIL
KbCABz4g33zue5973iPPPO56l1xzyTGHbLPJMos73iHTTDLM4La3STedW94i
zTRSTSXFFJJNJskkEk3kpjdJMAGVeOOJM45YY4kxhmijiTKKSCOJMIJwwwkz
jFBDCTGEYIO54Q2CDCLQQAIMAPkLATJfNg==
       "]],
      Antialiasing->False]}, 
    {GrayLevel[
      NCache[-1 + GoldenRatio, 0.6180339887498949]], 
     StyleBox[
      LineBox[{{{0, 0}, {0, 145}}, {{1, 0}, {1, 145}}, {{2, 0}, {2, 145}}, {{
       3, 0}, {3, 145}}, {{4, 0}, {4, 145}}, {{5, 0}, {5, 145}}, {{6, 0}, {6, 
       145}}, {{7, 0}, {7, 145}}, {{8, 0}, {8, 145}}, {{9, 0}, {9, 145}}, {{
       10, 0}, {10, 145}}, {{11, 0}, {11, 145}}, {{12, 0}, {12, 145}}, {{13, 
       0}, {13, 145}}, {{14, 0}, {14, 145}}, {{15, 0}, {15, 145}}, {{16, 0}, {
       16, 145}}, {{17, 0}, {17, 145}}, {{18, 0}, {18, 145}}}],
      Antialiasing->False]}}},
  Frame->False,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImageSize->{123.19302772440295`, Automatic},
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellChangeTimes->{3.833154414155773*^9, 3.833156585376095*^9},
 CellLabel->
  "Out[154]=",ExpressionUUID->"8571c374-eb66-4bac-aa45-591b3669acbd"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MemberQ", "[", 
  RowBox[{
   RowBox[{"result", "[", 
    RowBox[{"[", 
     RowBox[{"3", ";;"}], "]"}], "]"}], ",", 
   RowBox[{"result", "[", 
    RowBox[{"[", "2", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8331442921204205`*^9, 3.8331442941825423`*^9}, {
  3.833154339035239*^9, 3.8331543819875813`*^9}, {3.8331544771352725`*^9, 
  3.8331544796284175`*^9}, {3.8331557353387613`*^9, 3.8331557370606775`*^9}, {
  3.8331566002208524`*^9, 3.8331566016659126`*^9}},
 CellLabel->
  "In[155]:=",ExpressionUUID->"7d96587c-6a51-4b28-986e-0d943eb114d3"],

Cell[BoxData["True"], "Output",
 CellChangeTimes->{
  3.83314429470148*^9, 3.8331453511531167`*^9, {3.833154363846788*^9, 
   3.833154384962678*^9}, 3.833154482085755*^9, 3.8331557391914268`*^9, 
   3.8331558056879163`*^9, 3.8331566030679684`*^9},
 CellLabel->
  "Out[155]=",ExpressionUUID->"4e71bb8a-5d2a-45d1-9ce8-77bf3e36fd1e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pointer", " ", "=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Position", "[", 
     RowBox[{
      RowBox[{"result", "[", 
       RowBox[{"[", 
        RowBox[{"3", ";;"}], "]"}], "]"}], ",", 
      RowBox[{"result", "[", 
       RowBox[{"[", "2", "]"}], "]"}]}], "]"}], "[", 
    RowBox[{"[", "1", "]"}], "]"}], "[", 
   RowBox[{"[", "1", "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.833155103225054*^9, 3.8331551056838017`*^9}, {
  3.8331551722538986`*^9, 3.8331551782865143`*^9}, {3.8331552354268446`*^9, 
  3.833155283305893*^9}, {3.8331557885030203`*^9, 3.8331557905932536`*^9}, {
  3.8331567065442047`*^9, 3.8331567201125712`*^9}},
 CellLabel->
  "In[164]:=",ExpressionUUID->"b0d14a87-06ae-4a06-831b-d14c91c89e55"],

Cell[BoxData["72"], "Output",
 CellChangeTimes->{{3.8331551737110777`*^9, 3.833155179191352*^9}, {
   3.833155238989515*^9, 3.833155285122834*^9}, {3.833155792020146*^9, 
   3.8331558076779203`*^9}, {3.8331567098714857`*^9, 3.8331567179169245`*^9}, 
   3.83315675663805*^9},
 CellLabel->
  "Out[164]=",ExpressionUUID->"c1902422-156f-4d25-aeef-e995e3889a57"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pointer", "=", 
  RowBox[{"pointer", "+", "2"}]}]], "Input",
 CellChangeTimes->{{3.833156074653244*^9, 3.8331560925710497`*^9}, {
  3.8331567447245903`*^9, 3.833156745010001*^9}},
 CellLabel->
  "In[165]:=",ExpressionUUID->"aace8b21-3f5a-4830-9a22-0f80976a5257"],

Cell[BoxData["74"], "Output",
 CellChangeTimes->{
  3.833156100363104*^9, {3.83315674923729*^9, 3.833156758297967*^9}},
 CellLabel->
  "Out[165]=",ExpressionUUID->"db88d957-0ef4-4d99-963e-c33e7f7c5c22"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"pointer", "-", "2", "+", "pointer"}], "\[LessEqual]", 
  "t"}]], "Input",
 CellChangeTimes->{{3.833155302118124*^9, 3.833155314241634*^9}, {
  3.83315581595424*^9, 3.833155818331951*^9}, {3.833156747337722*^9, 
  3.833156747661504*^9}},
 CellLabel->
  "In[166]:=",ExpressionUUID->"3ec6b4ce-a949-4db3-b959-915ecd34bfb5"],

Cell[BoxData["False"], "Output",
 CellChangeTimes->{
  3.8331553163839564`*^9, {3.83315581036522*^9, 3.833155819450657*^9}, 
   3.8331561032989616`*^9, {3.833156750914258*^9, 3.8331567598388405`*^9}},
 CellLabel->
  "Out[166]=",ExpressionUUID->"eacbd60d-e4ef-4128-9054-5471dbb6c399"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Solution", " ", "1"}], "*)"}]], "Input",
 CellChangeTimes->{{3.833156398743512*^9, 
  3.8331564025410337`*^9}},ExpressionUUID->"5c09b165-9088-44bf-bc39-\
9c54b8aff5c8"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"result", "=", 
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{"rn", ",", "init", ",", "t"}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"l", "=", 
     RowBox[{"t", "+", "1"}]}], ";", "\[IndentingNewLine]", "\t", 
    RowBox[{"i", "=", "1"}], ";", "\[IndentingNewLine]", "\t", 
    RowBox[{
    "(*", "\:9700\:8981\:8865\:5145\:9a8c\:8bc1\:662f\:5426\:5728\:8be5\:5e8f\
\:5217\:4e2d\:5b8c\:6210\:4e00\:4e2a\:91cd\:590d\:5355\:5143", "*)"}], 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"While", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"MemberQ", "[", 
           RowBox[{
            RowBox[{"result", "[", 
             RowBox[{"[", 
              RowBox[{
               RowBox[{"i", "+", "1"}], ";;"}], "]"}], "]"}], ",", 
            RowBox[{"result", "[", 
             RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "||", 
         RowBox[{
          RowBox[{
           RowBox[{"2", "*", 
            RowBox[{
             RowBox[{
              RowBox[{"Position", "[", 
               RowBox[{
                RowBox[{"result", "[", 
                 RowBox[{"[", 
                  RowBox[{
                   RowBox[{"i", "+", "1"}], ";;"}], "]"}], "]"}], ",", 
                RowBox[{"result", "[", 
                 RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}], "[", 
             RowBox[{"[", "1", "]"}], "]"}]}], "+", "i"}], ">", "t"}]}], 
        ")"}], "&&", 
       RowBox[{"i", "<", "l"}]}], ",", 
      RowBox[{"i", "++"}]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
    RowBox[{"(*", 
     RowBox[{
     "\:5982\:679c\:8d85\:51fa\:8303\:56f4\:90fd\:6ca1\:6709\:627e\:5230", 
      "\:ff0c", 
      RowBox[{"\:5219\:6309\:7167\:8fd4\:56det", "+", "1"}], "\:ff0c", 
      "\:5373i"}], "*)"}], "\[IndentingNewLine]", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", ">", "t"}], ",", "i", ",", 
      RowBox[{"i", "-", "1"}]}], "]"}]}]}], "\[IndentingNewLine]", "\t", 
  "]"}]], "Input",
 CellChangeTimes->{{3.8331437099593134`*^9, 3.833143712431531*^9}, {
   3.833143782126738*^9, 3.833143821279702*^9}, {3.833144185656359*^9, 
   3.83314422729823*^9}, {3.833144298827235*^9, 3.833144358918084*^9}, {
   3.8331444036055603`*^9, 3.833144539304406*^9}, {3.833144621769392*^9, 
   3.8331446224619045`*^9}, {3.833144676532858*^9, 3.8331446926312895`*^9}, {
   3.8331447525810804`*^9, 3.8331448010490847`*^9}, {3.833144842897625*^9, 
   3.833144958334186*^9}, {3.8331454926668158`*^9, 3.8331454935087247`*^9}, 
   3.8331545593392363`*^9, {3.833154643617797*^9, 3.833154654049203*^9}, {
   3.8331546915157595`*^9, 3.8331547398976192`*^9}, {3.833155196400758*^9, 
   3.8331552111183453`*^9}, {3.833155552295369*^9, 3.8331556042435584`*^9}, {
   3.8331556380266438`*^9, 3.8331556980806313`*^9}, {3.8331561555353184`*^9, 
   3.8331561558814*^9}},
 CellLabel->
  "In[159]:=",ExpressionUUID->"700be6dd-3e8d-4d33-b447-8c2cbd2314ed"],

Cell[BoxData["145"], "Output",
 CellChangeTimes->{3.8331454977148085`*^9, 3.8331538062418385`*^9, 
  3.8331544561850004`*^9, 3.8331545612112885`*^9, 3.8331557129360323`*^9, 
  3.833156159054883*^9, 3.8331564580830173`*^9, 3.833156621166851*^9, 
  3.8331566988426313`*^9},
 CellLabel->
  "Out[159]=",ExpressionUUID->"9a0fedbd-3433-4bb5-85f5-30980413ac58"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.83315486363684*^9, 3.833154904203061*^9}, {
  3.83315620847221*^9, 
  3.833156209770903*^9}},ExpressionUUID->"3a011f48-07a2-45f0-abe6-\
94ca59b74f58"],

Cell[BoxData[
 RowBox[{"(*", 
  RowBox[{"Solution", " ", "2"}], "*)"}]], "Input",
 CellChangeTimes->{{3.833156380312744*^9, 
  3.833156386281246*^9}},ExpressionUUID->"8d74c7fa-423a-4a86-a668-\
67c4e80e5286"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Module", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"result", "=", 
     RowBox[{"CellularAutomaton", "[", 
      RowBox[{"rn", ",", "init", ",", "t"}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", "\t", 
   RowBox[{
    RowBox[{"l", "=", 
     RowBox[{"t", "+", "1"}]}], ";", "\[IndentingNewLine]", "\t", 
    RowBox[{"i", "=", "1"}], ";", "\[IndentingNewLine]", "\t", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"While", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"!", 
        RowBox[{"MemberQ", "[", 
         RowBox[{
          RowBox[{"result", "[", 
           RowBox[{"[", 
            RowBox[{
             RowBox[{"i", "+", "1"}], ";;"}], "]"}], "]"}], ",", 
          RowBox[{"result", "[", 
           RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "&&", 
       RowBox[{"i", "<", "l"}]}], ",", 
      RowBox[{"i", "++"}]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
    RowBox[{
    "(*", "\:9700\:8981\:8865\:5145\:9a8c\:8bc1\:662f\:5426\:5728\:8be5\:5e8f\
\:5217\:4e2d\:5b8c\:6210\:4e00\:4e2a\:91cd\:590d\:5355\:5143", "*)"}], 
    "\[IndentingNewLine]", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"2", "*", 
         RowBox[{
          RowBox[{
           RowBox[{"Position", "[", 
            RowBox[{
             RowBox[{"result", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", "+", "1"}], ";;"}], "]"}], "]"}], ",", 
             RowBox[{"result", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "[", 
           RowBox[{"[", "1", "]"}], "]"}], "[", 
          RowBox[{"[", "1", "]"}], "]"}]}], "+", "i"}], ">", "t"}], ",", 
      RowBox[{"i", "=", 
       RowBox[{"t", "+", "1"}]}]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
    RowBox[{"(*", 
     RowBox[{
     "\:5982\:679c\:8d85\:51fa\:8303\:56f4\:90fd\:6ca1\:6709\:627e\:5230", 
      "\:ff0c", 
      RowBox[{"\:5219\:6309\:7167\:8fd4\:56det", "+", "1"}], "\:ff0c", 
      "\:5373i"}], "*)"}], "\[IndentingNewLine]", "\t", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"i", ">", "t"}], ",", "i", ",", 
      RowBox[{"i", "-", "1"}]}], "]"}]}]}], "\[IndentingNewLine]", "\t", "]"}]
  ], "Input",
 CellChangeTimes->{{3.8331562071652775`*^9, 3.833156207762099*^9}, 
   3.833156392219885*^9, 3.8331564780519505`*^9},
 CellLabel->
  "In[158]:=",ExpressionUUID->"45c9c03b-f0db-4c81-ad2a-6a09071a1b71"],

Cell[BoxData["145"], "Output",
 CellChangeTimes->{
  3.8331564803516827`*^9, {3.8331566187158284`*^9, 3.8331566236813936`*^9}},
 CellLabel->
  "Out[158]=",ExpressionUUID->"55ce795c-5bb1-43fb-8ed5-d6948e287ffe"]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8331448936823034`*^9, 3.8331448955342827`*^9}, 
   3.833145165825699*^9, {3.833145299794083*^9, 3.8331453066326103`*^9}, {
   3.833145556223583*^9, 3.8331455623507195`*^9}, 3.8331538319804935`*^9, {
   3.833155523791311*^9, 3.833155546073413*^9}, 
   3.833156204679647*^9},ExpressionUUID->"55fd2968-1b2d-4703-ad17-\
f10930c39baf"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.8331562063413353`*^9, 
  3.833156206343335*^9}},ExpressionUUID->"619f83ef-60d9-44dc-a1f4-\
be403fbc1188"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.833153840590065*^9, 
  3.833153840595065*^9}},ExpressionUUID->"868136e3-ac84-4dad-9a5b-\
b71db6b9ca9c"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.833145143838585*^9, 3.8331451513589096`*^9}, {
   3.833153884715481*^9, 3.8331538857670145`*^9}, 
   3.8331544051431575`*^9},ExpressionUUID->"adbd4262-9da2-4bc1-a594-\
bf47a59dcb74"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.833154406841816*^9, 
  3.8331544068458047`*^9}},ExpressionUUID->"fbb6c888-6f05-42f3-8d0b-\
6ebcf49d4d50"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.833153822011199*^9, 3.833153822093424*^9}, 
   3.8331539274479775`*^9},ExpressionUUID->"1fcd6e76-13d7-40fa-a15e-\
9f59173062eb"],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.833143784749696*^9, 3.8331437856671066`*^9}},
 CellTags->"NoLabel",ExpressionUUID->"cbecc616-382c-41a4-89c3-36b0cb3a7c59"],

Cell[BoxData[
 FrameBox[
  TagBox[GridBox[{
     {
      StyleBox["\<\"ENTER YOUR CODE HERE\"\>",
       StripOnInput->False,
       FontFamily->"Source Sans Pro",
       FontSize->18,
       FontWeight->Plain,
       FontColor->GrayLevel[1]]}
    },
    AutoDelete->False,
    GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
    GridBoxSpacings->{"Columns" -> {{0}}, "Rows" -> {{0}}}],
   "Grid"],
  Background->RGBColor[0.9961, 0.3098, 0.21569],
  FrameMargins->{{13, 13}, {2, 8}},
  FrameStyle->None,
  ImageMargins->{{0, 0}, {-2, 0}},
  StripOnInput->False]], "WCIntroDivider",ExpressionUUID->"90c48f74-1f13-4066-\
be41-ecfd3e71be8a"],

Cell[BoxData[""], "WCIntroDividerLine",ExpressionUUID->"dcc306c6-26a6-4509-8ed5-e661ef06ce3e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CATransientLength", "[", 
   RowBox[{
    RowBox[{"rn_Integer", "/;", 
     RowBox[{"0", "\[LessEqual]", "rn", "\[LessEqual]", "255"}]}], ",", 
    RowBox[{"init", ":", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"0", "|", "1"}], ")"}], ".."}], "}"}]}], ",", "t_Integer"}], 
   "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"result", "=", 
      RowBox[{"CellularAutomaton", "[", 
       RowBox[{"rn", ",", "init", ",", "t"}], "]"}]}], "}"}], ",", 
    "\[IndentingNewLine]", "\t", 
    RowBox[{
     RowBox[{"l", "=", 
      RowBox[{"t", "+", "1"}]}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"i", "=", "1"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{
     "(*", "\:9700\:8981\:8865\:5145\:9a8c\:8bc1\:662f\:5426\:5728\:8be5\:5e8f\
\:5217\:4e2d\:5b8c\:6210\:4e00\:4e2a\:91cd\:590d\:5355\:5143", "*)"}], 
     "\[IndentingNewLine]", "\t", 
     RowBox[{"While", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"MemberQ", "[", 
            RowBox[{
             RowBox[{"result", "[", 
              RowBox[{"[", 
               RowBox[{
                RowBox[{"i", "+", "1"}], ";;"}], "]"}], "]"}], ",", 
             RowBox[{"result", "[", 
              RowBox[{"[", "i", "]"}], "]"}]}], "]"}]}], "||", 
          RowBox[{
           RowBox[{
            RowBox[{"2", "*", 
             RowBox[{
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{"result", "[", 
                  RowBox[{"[", 
                   RowBox[{
                    RowBox[{"i", "+", "1"}], ";;"}], "]"}], "]"}], ",", 
                 RowBox[{"result", "[", 
                  RowBox[{"[", "i", "]"}], "]"}]}], "]"}], "[", 
               RowBox[{"[", "1", "]"}], "]"}], "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], "+", "i"}], ">", "t"}]}], 
         ")"}], "&&", 
        RowBox[{"i", "<", "l"}]}], ",", 
       RowBox[{"i", "++"}]}], "]"}], ";", "\[IndentingNewLine]", "\t", 
     RowBox[{"(*", 
      RowBox[{
      "\:5982\:679c\:8d85\:51fa\:8303\:56f4\:90fd\:6ca1\:6709\:627e\:5230", 
       "\:ff0c", 
       RowBox[{"\:5219\:6309\:7167\:8fd4\:56det", "+", "1"}], "\:ff0c", 
       "\:5373i"}], "*)"}], "\[IndentingNewLine]", "\t", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"i", ">", "t"}], ",", "i", ",", 
       RowBox[{"i", "-", "1"}]}], "]"}]}]}], "\[IndentingNewLine]", "\t", 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.8331449686447086`*^9, 3.8331449731692514`*^9}, 
   3.8331455045963974`*^9, {3.83315404740524*^9, 3.8331540476269026`*^9}, {
   3.833154081521266*^9, 3.8331541352844114`*^9}, 3.8331561661834145`*^9, {
   3.8331562192661934`*^9, 3.8331562701579857`*^9}, 3.8331564837870264`*^9, 
   3.8331566373107834`*^9, 3.8331704116889944`*^9},
 CellTags->"NoLabel",ExpressionUUID->"969821b3-a656-4e9a-854d-67933530f6d4"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 TemplateBox[{
   DynamicModuleBox[{
    WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = False}, 
    ButtonBox[
     DynamicBox[
      ToBoxes[
       If[
        TrueQ[WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$], 
        Framed[
         Panel[
          ProgressIndicator[Appearance -> "Percolate", ImageSize -> {60, 20}],
           Background -> White, ImageSize -> {100, 20}, FrameMargins -> 0, 
          Alignment -> Center, Appearance -> "Frameless"], Background -> 
         GrayLevel[1], FrameStyle -> RGBColor[0.9961, 0.3098, 0.21569], 
         RoundingRadius -> 3, Alignment -> Center], 
        Mouseover[
         Framed[
          Panel[
           Style["Submit", "ButtonLabel", ShowStringCharacters -> False], 
           Background -> RGBColor[0.9961, 0.3098, 0.21569], 
           ImageSize -> {100, 20}, FrameMargins -> 0, Alignment -> Center, 
           Appearance -> "Frameless"], Background -> 
          RGBColor[0.9961, 0.3098, 0.21569], FrameStyle -> 
          RGBColor[0.9961, 0.3098, 0.21569], RoundingRadius -> 3, Alignment -> 
          Center], 
         Framed[
          Panel[
           Style[
           "Submit", "ButtonLabelActive", ShowStringCharacters -> False], 
           Background -> GrayLevel[1], ImageSize -> {100, 20}, FrameMargins -> 
           0, Alignment -> Center, Appearance -> "Frameless"], Background -> 
          GrayLevel[1], FrameStyle -> RGBColor[0.9961, 0.3098, 0.21569], 
          RoundingRadius -> 3, Alignment -> Center]]], StandardForm], 
      ImageSizeCache -> {115., {16., 20.}}], Appearance -> None, 
     ButtonFunction :> ((
      WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = True; (Off[
         MessageName[$CharacterEncoding, "utf8"]]; ((If[
          Not[
           TrueQ[
            WolframChallenges`$NotebookInitializedQ[
             Hash[{$SessionID, 
               Last[
                EvaluationNotebook[]]}]]]], 
          CloudGet[
           FileNameJoin[{
             CloudObject[
             "https://www.wolframcloud.com/objects/wolframchallenges/public/\
symbols"], "InitializeNotebook"}]][]]; (If[
           Or[$VersionNumber >= 11.1, 
            ChoiceDialog[
             StringJoin["Wolfram Challenges is designed for version ", 
              ToString[11.1], 
              " or later of the Wolfram System, and may not function properly \
with the older ", 
              "kernel you are using. Contact Wolfram Research \
(www.wolfram.com) for upgrade information."]]], 
           If[
            Not[
             StringQ[
              If[
               Not[$CloudConnected], 
               CloudConnect[], $WolframID]]], 
            MessageDialog[
            "Users must authenticate with the cloud in order to submit \
solutions."], WolframChallenges`$SubmissionTesting = False; Quiet[
              Quiet[If[
                 TrueQ[WolframChallenges`Common`$ActiveClearing], 
                 Quiet[
                  Unset[
                   Once["public-2.17.225"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]], "KernelSession"]]]]; Catch[
                 
                 Module[{CodeEquivalence`Utilities`Private`result$}, 
                  Check[CodeEquivalence`Utilities`Private`result$ = 
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.225"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]], "KernelSession"], Quiet[
                    Unset[
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.225"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]], "KernelSession"]]]; 
                    Throw[CodeEquivalence`Utilities`Private`result$, 
                    CodeEquivalence`Utilities`OnceUnlessFailed]]; If[
                    FailureQ[CodeEquivalence`Utilities`Private`result$], Quiet[
                    Unset[
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.225"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]], "KernelSession"]]]; (Message[
                    "Evaluating `1` resulted in the failure `2`.", 
                    Short[
                    HoldForm["public-2.17.225"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/HandleResponse"]]]], 
                    Short[
                    HoldForm[#]]]& )[
                    CodeEquivalence`Utilities`Private`result$]]; 
                  CodeEquivalence`Utilities`Private`result$], 
                 CodeEquivalence`Utilities`OnceUnlessFailed], 
               MessageName[CloudObject, "invuri"]], 
              MessageName[$CharacterEncoding, "utf8"]][
              Quiet[
               Quiet[If[
                  TrueQ[WolframChallenges`Common`$ActiveClearing], 
                  Quiet[
                   Unset[
                    Once["public-2.17.225"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]], "KernelSession"]]]]; Catch[
                  
                  Module[{CodeEquivalence`Utilities`Private`result$}, 
                   Check[CodeEquivalence`Utilities`Private`result$ = 
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.225"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]], "KernelSession"], Quiet[
                    Unset[
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.225"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]], "KernelSession"]]]; 
                    Throw[CodeEquivalence`Utilities`Private`result$, 
                    CodeEquivalence`Utilities`OnceUnlessFailed]]; If[
                    FailureQ[CodeEquivalence`Utilities`Private`result$], Quiet[
                    Unset[
                    CodeEquivalence`Utilities`Private`once[
                    "public-2.17.225"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]], "KernelSession"]]]; (Message[
                    "Evaluating `1` resulted in the failure `2`.", 
                    Short[
                    HoldForm["public-2.17.225"; CloudGet[
                    CloudObject[
                    "https://www.wolframcloud.com/objects/wolframchallenges/\
public/symbols/CheckAnswer"]]]], 
                    Short[
                    HoldForm[#]]]& )[
                    CodeEquivalence`Utilities`Private`result$]]; 
                   CodeEquivalence`Utilities`Private`result$], 
                  CodeEquivalence`Utilities`OnceUnlessFailed], 
                MessageName[CloudObject, "invuri"]], 
               MessageName[$CharacterEncoding, "utf8"]][
               CloudObject[
               "https://www.wolframcloud.com/objects/wolframchallenges/public/\
api/check"], {"CATransientLength"}, "public/pub/p-6a6d2fb42d751f25"]]]]; 
         Null))& )[]); 
      WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = False; 
      Null)& )[], Evaluator -> Automatic, Method -> "Queued"], 
    DynamicModuleValues :> {}, 
    Initialization :> {
     WolframChallenges`Notebooks`Authoring`Private`$inSubmit$$ = False}], 
   TemplateBox[{10}, "Spacer1"], 
   DynamicBox[
    ToBoxes[
     Refresh[Off[
        MessageName[$CharacterEncoding, "utf8"]]; If[
        Not[
         TrueQ[$CloudConnected]], 
        Column[{
          Row[{
            Text[
             Style[
             "Note: ", "SigninText", FontWeight -> "DemiBold", Background -> 
              None]], 
            Text[
             Button[
              
              PaneSelector[{
               False -> "Sign into the Wolfram Cloud", True -> 
                "Sign into the Wolfram Cloud"}, 
               Dynamic[
                CurrentValue["MouseOver"], 
                ImageSizeCache -> {48., {1., 12.}}], 
               BaseStyle -> {"SigninText", 
                 RGBColor["#36b1bf"]}, FrameMargins -> 0, ImageSize -> 
               Automatic], 
              CloudConnect[], Appearance -> None, Evaluator -> Automatic, 
              Method -> "Queued"]], 
            Text[
             Style[
             " to save your work on ", "SigninText", Background -> None]]}], 
          Text[
           Style[
           "Challenges and keep track of progress.", "SigninText", Background -> 
            None]]}, Alignment -> Left, Spacings -> 0], 
        Invisible[""]], UpdateInterval -> 1], StandardForm]]},
  "RowDefault"]], "SubmitRow",ExpressionUUID->"53ffca23-b93a-441a-9959-\
2050b3791819"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "{38}", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Input", "scanner" -> "Identity", "id" -> "Input", 
     "position" -> "100", "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"38"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox["38", PolynomialForm[#, TraditionalOrder -> False]& ], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata,formuladata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod2$$ = XMLElement[
   "pod", {"title" -> "Number line", "scanner" -> "NumberLine", "id" -> 
     "NumberLine", "position" -> "200", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"NumberLinePlot[38]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{
              GraphicsBox[{
                TagBox[
                 TooltipBox[{
                   PointSize[0.02], 
                   RGBColor[0.24720000000000014`, 0.24, 0.6], 
                   PointBox[{38., 0.6840000000000002}]}, "38"], 
                 Annotation[#, 38., "Tooltip"]& ]}, ImageSize -> 330., 
               Axes -> {True, False}, 
               PlotRange -> {{26.599999999999998`, 49.400000000000006`}, 
                 Automatic}, AxesOrigin -> {0, 0}], "\"\""}, "Labeled", 
             DisplayFunction -> (FormBox[
               GridBox[{{
                  TagBox[
                   ItemBox[
                    PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                   "SkipImageSizeLevel"]}, {
                  ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
                GridBoxAlignment -> {
                 "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
                False, GridBoxItemSize -> {
                 "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                BaselinePosition -> {1, 1}], TraditionalForm]& ), 
             InterpretationFunction -> (RowBox[{
                StyleBox[
                "Labeled", FontFamily -> "Bitstream Vera Sans", 
                 FontSize -> -1 + Inherited], "[", 
                RowBox[{#, ",", #2, ",", 
                  StyleBox[
                  "Bottom", FontFamily -> "Bitstream Vera Sans", 
                   FontSize -> -1 + Inherited]}], "]"}]& )], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "1DMathPlot"}, {}], "\n "}]}], 
   Typeset`pod3$$ = XMLElement[
   "pod", {"title" -> "Number name", "scanner" -> "Integer", "id" -> 
     "NumberName", "position" -> "300", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"IntegerName[38, \"Words\"]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["\"thirty\[Hyphen]eight\"", TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod4$$ = XMLElement[
   "pod", {"title" -> "Visual representation", "scanner" -> "Integer", "id" -> 
     "VisualRepresentation", "position" -> "400", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
            "\"\[FilledSmallCircle]\[ThinSpace]\[FilledSmallCircle]\
\[ThinSpace]\[FilledSmallCircle]\[ThinSpace]\[FilledSmallCircle]\[ThinSpace]\
\[FilledSmallCircle]\[ThinSpace]\[FilledSmallCircle]\[ThinSpace]\
\[FilledSmallCircle]\[ThinSpace]\[FilledSmallCircle]\[ThinSpace]\
\[FilledSmallCircle]\[ThinSpace]\[FilledSmallCircle]\[ThinSpace]\
\[FilledSmallCircle]\[ThinSpace]\[FilledSmallCircle]\[ThinSpace]\
\[FilledSmallCircle]\[ThinSpace]\[FilledSmallCircle]\[ThinSpace]\
\[FilledSmallCircle]\[ThinSpace]\[FilledSmallCircle]\[ThinSpace]\
\[FilledSmallCircle]\[ThinSpace]\[FilledSmallCircle]\[ThinSpace]\
\[FilledSmallCircle]\[ThinSpace]\[FilledSmallCircle]\[ThinSpace]\
\[FilledSmallCircle]\[ThinSpace]\[FilledSmallCircle]\[ThinSpace]\
\[FilledSmallCircle]\[ThinSpace]\[FilledSmallCircle]\[ThinSpace]\
\[FilledSmallCircle]\[ThinSpace]\[FilledSmallCircle]\[ThinSpace]\
\[FilledSmallCircle]\[ThinSpace]\[FilledSmallCircle]\[ThinSpace]\
\[FilledSmallCircle]\[ThinSpace]\[FilledSmallCircle]\[ThinSpace]\
\[FilledSmallCircle]\[ThinSpace]\[FilledSmallCircle]\[ThinSpace]\
\[FilledSmallCircle]\[ThinSpace]\[FilledSmallCircle]\[ThinSpace]\
\[FilledSmallCircle]\[ThinSpace]\[FilledSmallCircle]\[ThinSpace]\
\[FilledSmallCircle]\[ThinSpace]\[FilledSmallCircle]\"", FontFamily -> 
             "Courier", 
             GrayLevel[0.5], StripOnInput -> False], TraditionalForm]], 
          "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod5$$ = XMLElement[
   "pod", {"title" -> "Roman numerals", "scanner" -> "Integer", "id" -> 
     "RomanNumerals", "position" -> "500", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox["\"XXXVIII\"", TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {"plaintext,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Other historical numerals", "input" -> 
         "RomanNumerals__Other historical numerals"}, {}]}]}], 
   Typeset`pod6$$ = XMLElement[
   "pod", {"title" -> "Binary form", "scanner" -> "Integer", "id" -> 
     "BaseConversions", "position" -> "600", "error" -> "false", "numsubpods" -> 
     "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"BaseForm[38, 2]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TagBox[
             InterpretationBox[
              SubscriptBox["\"100110\"", "\"2\""], 38, Editable -> False], 
             BaseForm[#, 2]& ], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput,moutput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "BaseConversions__Step-by-step solution", "stepbystep" -> 
         "true"}, {}]}]}], Typeset`pod7$$ = XMLElement[
   "pod", {"title" -> "Prime factorization", "scanner" -> "Integer", "id" -> 
     "PrimeFactorization", "position" -> "700", "error" -> "false", 
     "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"FactorInteger[38]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             RowBox[{"2", 
               StyleBox["\[Times]", FontColor -> GrayLevel[0.5]], "19"}], 
             DigitBlockMinimum -> {
               DirectedInfinity[1], 
               DirectedInfinity[1]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,numberdata"}]}]\
, 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "PrimeFactorization__Step-by-step solution", "stepbystep" -> 
         "true"}, {}]}]}], Typeset`pod8$$ = XMLElement[
   "pod", {"title" -> "Residues modulo small integers", "scanner" -> 
     "Integer", "id" -> "ResiduesModuloSmallIntegers", "position" -> "800", 
     "error" -> "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Mod[38, Range[2, 9]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            StyleBox[
             TagBox[
              GridBox[{{
                 TagBox[
                  PaneBox[
                  "m", BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "2", "3", "4", "5", 
                 "6", "7", "8", "9"}, {
                 TagBox[
                  PaneBox[
                   TemplateBox[{"38", "m"}, "Mod"], 
                   BaseStyle -> {{
                    BaselinePosition -> Baseline, FontColor -> 
                    GrayLevel[0.3]}, LineSpacing -> {0.9, 0, 1.5}, 
                    LinebreakAdjustments -> {1, 10, 10000, 0, 100}, 
                    TextAlignment -> Left}, BaselinePosition -> Baseline], 
                  $CellContext`TagBoxWrapper["Label"]], "0", "2", "2", "3", 
                 "2", "3", "6", "2"}}, 
               GridBoxAlignment -> {
                "Columns" -> {Left, {Right}}, "Rows" -> {{Baseline}}}, 
               AutoDelete -> False, 
               GridBoxBackground -> {"Columns" -> {None, None}}, 
               GridBoxFrame -> {"Columns" -> {{True}}, "Rows" -> {{True}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {"Columns" -> {{1.5}, 2}, "Rows" -> {{1}}}, 
               FrameStyle -> GrayLevel[0.84], BaselinePosition -> Automatic, 
               AllowScriptLevelChange -> False], "Grid"], 
             LineSpacing -> {0.9, 0, 1.5}, LineIndent -> 0, StripOnInput -> 
             False], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata,\
numberdata"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Grid"}, {}], "\n  "}]}], 
   Typeset`pod9$$ = XMLElement[
   "pod", {"title" -> "Properties", "scanner" -> "Integer", "id" -> 
     "Property", "position" -> "900", "error" -> "false", "numsubpods" -> 
     "2"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"EvenQ[38]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            TemplateBox[{"38", "\" is an even number.\""}, "RowDefault"], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"PartitionsQ[17]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            
            TemplateBox[{
             "38", "\" is the number of integer partitions of \"", "17", 
              "\" into distinct parts \"", 
              StyleBox[
               RowBox[{"\"(\"", "\[NoBreak]", 
                 TagBox[
                  RowBox[{
                    TagBox["q", PartitionsQ], "(", "17", ")"}], HoldForm], 
                 "\[NoBreak]", "\")\""}], {
                GrayLevel[0.6], LinebreakAdjustments -> {1, 100, 1, 0, 100}, 
                LineIndent -> 0}], "\".\""}, "RowDefault"], TraditionalForm]],
           "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,computabledata,formatteddata"}]}], 
     XMLElement["expressiontypes", {"count" -> "2"}, {"\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n "}]}], 
   Typeset`pod10$$ = XMLElement[
   "pod", {"title" -> "Quadratic residues modulo 38", "scanner" -> "Integer", 
     "id" -> "QuadraticResiduesModuloInteger", "position" -> "1000", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"Union[PowerMod[Range[0, 38/2], 2, 38]]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            PaneBox[
             
             RowBox[{"0", ",", "1", ",", "4", ",", "5", ",", "6", ",", "7", 
               ",", "9", ",", "11", ",", "16", ",", "17", ",", "19", ",", 
               "20", ",", "23", ",", "24", ",", "25", ",", "26", ",", "28", 
               ",", "30", ",", "35", ",", "36"}], ImageSize -> 550, 
             BaselinePosition -> Baseline], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput,moutput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`pod11$$ = XMLElement[
   "pod", {"title" -> "Primitive roots modulo 38", "scanner" -> "Integer", 
     "id" -> "PrimitiveRootsModuloInteger", "position" -> "1100", "error" -> 
     "false", "numsubpods" -> "1"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement[
       "minput", {}, {
        "Select[Range[38 - 1], MultiplicativeOrder[#1, 38] == EulerPhi[38] & \
]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            PaneBox[
             
             RowBox[{"3", ",", "13", ",", "15", ",", "21", ",", "29", ",", 
               "33"}], ImageSize -> 550, BaselinePosition -> Baseline], 
            TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement["dataformats", {}, {"plaintext,minput,moutput"}]}], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`aux2$$ = {
   True, False, {False}, True}, Typeset`aux3$$ = {True, False, {False}, True},
    Typeset`aux4$$ = {True, False, {False}, True}, Typeset`aux5$$ = {
   True, False, {False}, True}, Typeset`aux6$$ = {True, False, {False}, True},
    Typeset`aux7$$ = {True, False, {False}, True}, Typeset`aux8$$ = {
   True, False, {False}, True}, Typeset`aux9$$ = {
   True, False, {False, False}, True}, Typeset`aux10$$ = {
   True, False, {False}, True}, Typeset`aux11$$ = {
   True, False, {False}, True}, Typeset`asyncpods$$ = {}, Typeset`nonpods$$ = {
    XMLElement["assumptions", {"count" -> "1"}, {
      XMLElement[
      "assumption", {
       "type" -> "Clash", "word" -> "{38}", "template" -> 
        "Assuming \"{38}\" is referring to math${separator}Use as ${desc} \
instead", "count" -> "2", "pulldown" -> "false", "default" -> 
        "{\"C\", \"{38}\"} -> {\"NumberMathListParentheses\", \"dflt\"}"}, {
        XMLElement[
        "value", {
         "name" -> "NumberMathListParentheses", "desc" -> 
          " referring to math", "input" -> 
          "{\"C\", \"{38}\"} -> {\"NumberMathListParentheses\"}"}, {}], 
        XMLElement[
        "value", {
         "name" -> "PseudoTokenYear", "desc" -> "a year", "input" -> 
          "{\"C\", \"{38}\"} -> {\"PseudoTokenYear\"}"}, {}]}]}]}, 
   Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True], 
   Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "11", "datatypes" -> "Number", "timedout" -> "", 
    "timedoutpods" -> "", "timing" -> "1.027", "parsetiming" -> 
    "0.11900000000000001", "parsetimedout" -> "false", "recalculate" -> "", 
    "id" -> "MSP14021312dcge44ac5df00004a961ch4cia16f15", "host" -> 
    "https://www4c.wolframalpha.com", "server" -> "24", "related" -> 
    "https://www4c.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa14121312dcge44ac5df0000483g8d0h1i15a4252767246048745074672", "version" -> 
    "2.6", "inputstring" -> "{38}"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 8., 
    "Date" -> {2021, 6, 20, 13, 20, 56.8284264`9.50714046685581}, "Line" -> 
    125, "SessionID" -> 26448954974559015658}, Typeset`showpods$$ = {1, 2, 3, 
   4, 5, 6, 7, 8, 9, 10, 11}, Typeset`failedpods$$ = {}, 
   Typeset`chosen$$ = {}, Typeset`open$$ = False, Typeset`newq$$ = "{38}"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$}, {
        Typeset`aux1$$, Typeset`aux2$$, Typeset`aux3$$, Typeset`aux4$$, 
         Typeset`aux5$$, Typeset`aux6$$, Typeset`aux7$$, Typeset`aux8$$, 
         Typeset`aux9$$, Typeset`aux10$$, Typeset`aux11$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{1088., {388.9, 396.1}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{
        Typeset`pod1$$, Typeset`pod2$$, Typeset`pod3$$, Typeset`pod4$$, 
         Typeset`pod5$$, Typeset`pod6$$, Typeset`pod7$$, Typeset`pod8$$, 
         Typeset`pod9$$, Typeset`pod10$$, Typeset`pod11$$}], 
       Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.833155256861419*^9},ExpressionUUID->"9b0509b0-9922-4fdd-942d-\
bae9abc32a15"]
}, Open  ]]
},
WindowSize->{1152., 585.6},
WindowMargins->{{
  Automatic, -5.399999999999864}, {-5.399999999999977, Automatic}},
DockedCells->{
  Cell[
   BoxData[
    TagBox[
     GridBox[{{
        ButtonBox[
         TagBox[
          GridBox[{{
             GraphicsBox[
              TagBox[
               RasterBox[CompressedData["
1:eJzVmguUlVUVx4eXTDAoMSKGyEMFEc0oKRCmDBIMTSpEKkFGRh6ZNBCgaJGD
+QDKB1SKBoQouVKyJDGNkcBkWUG+SgXJ1JKsMAvIMJ+7/evsb90z557vfneu
F1zutf4z3+Ocs/c+j/36bq+66aOntKyoqJhVqX9GT5wzdObMiRef0VFvzqyf
dd7U+smTRtbPnjx18sxBda304WBFjaJ1RflJRFopOpZhnPcyVjlk2lek8p2h
+Ktiod13U6xQ/EIxFx0ifToqvmptbqKPPZ+v+Jti7P7WI41Ulh6KIXbdRfFf
cVRruv5ZcsS7oZExhnr9oOetb63dv6o4zNqeCM/9rafxPkXxsmKV3Y/2ZJ6J
jIovKtYo7lAMLDDWR6zNT60P+n7FG2+MtVup+I9ixP7S05PxKZPldruvUbzm
ybinlLWwedrjjfO6t4dus2fbyq1PRI4DFX29+7eM96N21sazhuLO66q3swba
d7jiFhtrkGKc8XjEeMK7pbU9RnFQOXT0+LO/nlHc4z3zzya0U8zW7APefw94
7fDer1U8W07eOtZ644NdaWPPBit+otiqWK3oVS5+Ef49jceTxnOwPW+peMVk
21gmXp2Cue1jz9s0c5wDFMcpRtnen6Q4U/FRxSHNHCuZ8+6BbJ2bM07K2IcH
Yz6t2Kt4U7E4o++hiumKDbYOu8SdwUbDJsVz4s7jHxRLFCcpWhQYc6Hx3mt9
fOpZoo7DFP3tuoXiT5JPbyhqUvofJS52QKZ7FecqjijAr71ihOLb4s7qE4qz
xWxS0Haw8Q7p+WSe9P/xipFF6nq4rcN2RaU9O9fmNKHdyBPp21oxT5xfvlHs
TJv+08TZ7V8r/mh4XHG34grFyYo24vZ9nc3xrxTHRfiMNxkTQrZae9fWZP+3
onsR+i7zxpnhPT9S8Vlx569TpF9Xk+9hxQfE2ZIxige98fDZN0fWJiHWlv1K
rPYexZU2d+dE+HUyWYhzjvSef9kbb3kR+m7z2nNWK8XFdthF9ma/SB984HM2
V8zv8aa7T0mcOKCAvgmxdpx7zhK++F+KSyJ8+5pMd5qMyLrdG2d7EfpuDXi/
5F0Ty3YK2nczXa60+4mS8xEJESMRi4y0uXkmeL8mRe97FAeJs+v494sia/xq
iqxQZhymba5P4Q3dGrRlLR9SLLH7i1P6sS8/JG4eLlJ8y3v3PXFn9q1IP+gx
RWfFh8Xt7VMDGVYWkPf6IvTtIe6sh8Qadg3aXiNu3yLvlBSeLyg6KLbYPT5o
oF0vEmejmLd/FJAbG8dexWa/KJ6f1ev3mWwhoUPPFB05Jy29+0+Jyz0hbPEK
xg36cEaZb87QB6XpvvJphuJ07x5bij063/Tk7PUTZ68L0Q3GlxxqWSALfv77
4s65mOyjvPfYzhbe/ScUmxW9gzmosuv2kTn6seJqcfWMh1JkJM+pEudzfKoV
53Mb7f79kssF0oj9Tq6MnyCuPSqQp739rwp0O9p0O9l7douNyXkf4Ok7S5yd
WBOMjT99xeb1rAIy4oOxZ2F8wFyd5t0j0wMZ+kIPGn982pJAJvYJZ2K25OKO
ExT/tL4rvbaPemOiXx9p6ofXBWNfqlht1w+nyMa+xUbNi7zjHHTz7rsXqS9E
bYBcG5/V1pPpXq/NCnFrstN7tsVr+8tgzL3B/c2Bvuj4OcWxBeSiXoWdejHl
Pf2pW+GrDpHi9V0gbu9hB4d7Mt2UocMmr21DBo8JXlvyftYOHzErpT3zh81u
THkPUZc5VfExRTspXt9tJgex6TxPrvEZ/S7z2lL7DPP3hNjrbby21Mz+Yte3
RtqzXsQHFxQhO/WfswIbUgwdrJijuM2TC7+2OaU9cWKT2qi4M/tk0O4+RZeg
HfswsRu/jYy92OTZXaTs2F3iFHKNJUX2wX9T+90cyEYs9vOgLfFiH69NB+8a
H/ElcfaI+uMECXJxcXHF3XYd5p/YB+rJlxUh88vBPetLTHFO5F1InxSXP24N
ZOtsMo8wHfDxVb6u4vYAc9I/6Jf41HERfdfa9VPSlPAF5DWJjWJuN0bkxX8e
aJgqufoUdrCPIW1vQuQQp0T0TXwj+XMX73l/cfYbnZK55Cxhf4gf1ntjXxrZ
z5vs+jdeO74rYHeoJbJHLxHnn2Ox6WvW9+vi7NVS7x3tyTk4j5eLswchkWN9
njEC2Xzfh/3jjMyQXJ14b0Sex4P7BcGY1Ed32PUqr129PWMedyjGils/fM13
IjJnEfX3rqbbY8E78iLyjh8Gsl2RoQs+YV0G3/HBmOjwhumRfAPg3LKPD5Om
sRR2iDPzuyzlUoi1qBfn2xrExehPmxzUK+cFso3LGA9d0+pBED6qXUVA4uwy
Z6WvtZtrzy/0+hL/s5++21wlA8LX/7+mLq7OTI2L+J/zMyyQi/MUq7VBnLEa
a1cr+fEIOQbxJ/WRg4NxGyRns4gpqu3atzH4X+Ig/MZgGwvf/WlxdvMbiuXi
6uWPmPx+jSwhfCf2c7Xd44vIG4iLD/BkqjZZiWFfCMbAPk4KdCCGvUHc2l0n
zod+wdqvDdr2EvtuJ1bvEBcP+zk7372oX00x3dGPWJBzRx5L7bkqGJf9kJzZ
060vueJsG/N+a/cDZAz6JjWScSb7daYLeUDviiJIXJ6d0IjgHfN9o3d/fmRt
smiB9eX7AXWAu8TlVA2K88TFiNRG3jSwT8ilmuSD4urHCTWJQVL0amvzTZ5P
DoBPIvbwfcGKoA/tyAmPtfssuxcj/ERf6w//tJoOtMja/Uws9/dk8XM5bFGV
6dDPdGLsSq89+8g/v9QJwjhhY2SeqJ2yZ7Cfid9tLt3njZcWl603HnyDwa5U
B3KsD9rfL7laB8S6tA76/ChDriY1FOuDDOz55XZPvFKKzmOtP/YtrFUSc2Gb
8fusyfCIHEulMN0Z6UPMlVaDgk4SZ2vDecJOYUOvtXtsUSymKkTEJ0ntCN2e
sOfojr+nNkmMekHAm31JXDOkwNicmQGhvtYfffZE+mAPa+yavdMh6HeEOH+b
xPz45Q3N1HmhNx61iTq7HmkyXRjwbCe5fcw3xlWRMZn3MTFdvXGoHfKtBxtw
uzj/zth+PntHSj/y/N9LrgZGjYqcspg9zjoc7Y2HzbnKdB0X4bfa6zvHZFxs
Mi8zHQ4tpGvGPMwP5MvbI+Js4lybV+rgve05fnqyOP+OHaSGwHcPcgbiZHKL
GuuP3PhuYgZ8VN8InxMDWeaXqlcwLnPcQ9x+vTrgMadAP2IXbAh2kd9V4Zvx
m3nfN609OfNpNh8v2XyQh0W/A9uc+rTIZETWqlifDD2pn2fVv8mnyRGIJyfE
dBGXU0yzNuQm2Fdyhwfs2RbJxX7kysTaQ0I9xcXL8FhnPGM1T5+wd3nfUQvo
21ryv5uFxLfRj3v37L3qAmOSz7LGrCO5a624eHNQRr9qaVrLI3b+TIZs7I/o
XirAh7g7Zqsh1gTfOyx4js5l+1mmuPMc1i2HG+8wJ0gImU8okR8xI/l7Ele+
bjqNtvfE5WFOU1dGfc8OxsbOd7Z3o0wWXzZkLXofF+CLT+Us5v1eVZrmFNC6
2Bgl8g1rjVsibVqZbJWxMcokB3Up4uVrJT+/3lVGPruCseGFLSZvKtm3NoM/
dQa+R6bVQxLKq4mUwKsygwcykD8eUw7dUmTgzBQTK5GzYrubvcfE+Qby3MuL
4IMseflDOUlc/SwtryCm58wlNV58Lt9+qeF3LTAm548aLDlasoeJVfDROyVO
yDB9X+rqyUcsg8+/y2QiduS7QJLj4GvxVcRkz5p82HHi62n2HhtA3LVBcueD
+iB1GGrpyW+/iPFqjUej8YR36u/X3kkSl9MONN0bxH0DbZScH8OPEufnxVXv
VhIX31OLTPJi4kq+LX5TXB63Qgr8/v3dQOLq7Jxbv8bP9yZ+68/3AfIgcia/
hkstY4qUEPO/UyQuVyfuT76HkteutvOclu9QWyE3SuzcbjvHbztW2tckLo9g
vxIbfE2C3zFl9CUv5BtN8pvApftS1nKRuPpuybZHXP6X+dvWUuh/YTQHOQ==

                "], {{0, 58}, {60, 0}}, {0, 255}, ColorFunction -> RGBColor], 
               
               BoxForm`ImageTag[
               "Byte", ColorSpace -> "RGB", Interleaving -> True], Selectable -> 
               False], BoxID -> 
              "{\"type\":\"Image\",\"message\":\"SizeLimitReached\",\"\
imageData\":{\"imageSource\":\"data:image/png;base64,\
iVBORw0KGgoAAAANSUhEUgAAAB4AAAAdCAYAAAC9pNwMAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAA\
AOxAAADsQBlSsOGwAABL5JREFUSIm1l2mIllUUx393Rs1sUUizKNFSTPODhbbYouRMtmglWGhZQYlt\
QmL0oUUliEpbRLRMKwk0W6XUD1k2ViSCGmkoWplLWDqU0zK5TGYzvz7c8+LTOONMUAdenvvcc885/\
3vP/57zvNAKUTur96vt1DvUfgVdT3Wc2l69Rz2jNT7btBBwDPATMBw4D9gDTAKmAZtjWV9gIlAGDAW\
GqM8AA1NKL7UGRDHgyfE8oD6r3quuU0cfw+bKWDNJnarWxXyn1gYdoFarSV2kblev+RegL1W3qkvi/\
Xu1ovG6po76WuA04GlgQ0ppbMFpW+\
A64AogFXxsBN5OKdWklFYDvdX71OnAmcAYYGUxSCo4HUnOUy3wEVAPTCjlSZ0A9Azd8TFuC+\
wCqoFBwCnA1JTSPvUmYFEAK3Gl91F5j+P5Vj1dnaz2jPkO6jz1GnWG+pu6XH3DI/\
KnulQdor6qnhO23dTH1B7qBvX7pnKzqeCkWm0TeZ6rDla3hP67uDaT432W2hDjWnWUOl/\
tqparO9XDod/eVOCr1Tp1l1oZc+PVa9WvCrubpP6uzlSnqJXqrwX9frVCfSV8XKRuUw+\
pt5TilakD1VXAGqAP8EJKqUptDwyM3PWJ9T8Ah4GTgMsAgduCFyU5AZgOrFIvTimtBeYC/\
YFl6gq1AnV0IF2v7lG3BtLh6sjYXUkeUL+J8V+x+3nmK9dYKtU54WuDWqN+\
FrqJZcBq4CBwPnA68GEgHwDsj90BfAJ0BXrHezlwN/\
B82DeWYcCfMX6HzPjLgTrgfcwkukBdEnk7MVBOU28NhIfUEQWSlOSwuttMqLWNdO+\
oT4av9upz6jIz88vLgO3kGvs4cGfslMifMX4DGAy8BNTEXD1wb8wtABYDTwANoW/\
gSJ3oE2tnAf2AHUReS2xUHRwoH1WHxm57ma/Yk+rNTeSzJFWh36w+pc4OX/\
1DfzCeNWXkzlIfbPwU2BsoPwc6A/\
OBXuQyuiXGM4CFsX5b5A2gArgIWA98XDixfcBScsVrAKakQNQLOBc4BLxFJtBv5GtwF5lAdwMryGXy\
BOBAgJsKjCMTrCGOchDwOvmKfgd8GxusBXallDahlgWx5qjvxlGMC0Bjg1QfNnO0DeZ2OL4w94t6uf\
pi+BgR85+qsyNWOaEs1l3V683lMpnrc4W6ppngX5tL4wvqXvUq9TWjD8d7UaooidoxAqyL50J1ceja\
mT8GbjYXkB+bCP5IrBsctt3C9mX1A3Oj+DzAdaZA9xKAMqAT+cIPBQaklNaH7kbganIhqQa6RL5/\
AtqFbjcwM6VUp/YNMn5BLia1KaX6UqxiP+\
4A7AROLWAZTr6bD6aUVqptgEuAiwNgAv4gfwisTCn9rl4YZHyIfzb/\
GqBHSukAjSWIUm0mTZV6Soz3qd2PMjjavqu5Xzeop5krVb25To9qyTipbeM3JICoPtyKwLfH2p/\
NTeI4o6+3ZFtycEYwtCjL1FOPYdMxyFSUX5s7qWaRxNFMAk4mf2d9SSbQWeSKNZ9cMG4jV6y9wHLgb\
DI36oA5KaWFrdptSxK5e9PcY1er76k9/hPnzQTsry5Qd5g/ebqrXcx/bTaai9Cg/\
yNwpXqD2q4JXbk6TB3fWn9/A9izhAbbZ9AzAAAAAElFTkSuQmCC\",\"boundingBox\":{\"\
width\":30,\"height\":29,\"baseline\":19}},\"plotRange\":[0,1,0,1]}", 
              DefaultBaseStyle -> "ImageGraphics", ImageSize -> 
              Magnification[0.5], ImageSizeRaw -> {60, 58}, 
              PlotRange -> {{0, 60}, {0, 58}}], 
             StyleBox[
             "\"WOLFRAM CHALLENGES\"", ShowStringCharacters -> False, 
              FontFamily -> "Source Sans Pro", FontSize -> 16, FontWeight -> 
              "Normal", FontColor -> GrayLevel[1]]}}, AutoDelete -> False, 
           GridBoxAlignment -> {
            "Columns" -> {Left, Left}, "Rows" -> {Center, Center}}, 
           GridBoxItemSize -> {
            "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"], 
         Appearance -> None, ButtonFunction :> 
         SystemOpen["http://challenges.wolfram.com/"], Evaluator -> Automatic,
          Method -> "Preemptive"]}}, AutoDelete -> False, 
      GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
      GridBoxItemSize -> {
       "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], "Grid"]], 
   "Text", ShowCellBracket -> False, CellMargins -> 0, GeneratedCell -> True, 
   CellAutoOverwrite -> True, CellFrameMargins -> {{60, 0}, {4, 6}}, 
   CellFrameColor -> RGBColor[0.9961, 0.3098, 0.21569], 
   ShowStringCharacters -> False, Background -> 
   RGBColor[0.9961, 0.3098, 0.21569]], 
  Cell["", "Text", CellMargins -> 0, ShowCellBracket -> False, 
   CellElementSpacings -> {"CellMinHeight" -> 5}, CellFrameMargins -> 3, 
   FontSize -> 1, CellFrame -> 0, Background -> 
   RGBColor[0.9686274509803922, 0.9137254901960784, 0.403921568627451]]},
TaggingRules->{
 "WolframChallengesInternal" -> 
  Association[
   "PacletVersion" -> "2.17.225", "FrameworkVersion" -> "public-2.17.225", 
    "PacletBuildDate" -> 
    DateObject[{2018, 10, 16, 19, 48, 0.45016`6.405941891305889}, "Instant", 
      "Gregorian", 0.], "NotebookBuildDate" -> 
    DateObject[{2019, 1, 29, 16, 17, 54.48761`8.488872733214908}, "Instant", 
      "Gregorian", 0.], "Hash" -> "6a6d2fb42d751f25", "Key" -> 
    "public/pub/p-6a6d2fb42d751f25", "CheckerAPI" -> 
    CloudObject[
     "https://www.wolframcloud.com/objects/wolframchallenges/public/api/\
check"], "SearchNames" -> {"CATransientLength"}, "Status" -> "Published", 
    "Source" -> CloudObject[
     "https://www.wolframcloud.com/objects/wolframchallenges/public/pub/p-\
6a6d2fb42d751f25"], "ReviewNotebook" -> False], "TryRealOnly" -> False},
ShowAutoSpellCheck->False,
FrontEndVersion->"12.1 for Microsoft Windows (64-bit) (2020\:5e743\:670814\
\:65e5)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Title"], ShowCellBracket -> False, ShowGroupOpener -> False, 
    CellMargins -> {{65.14453125, 30}, {0., 30.}}, 
    CellFrameMargins -> {{66, Inherited}, {Inherited, 20}}, FontFamily -> 
    "Source Sans Pro Light", FontSize -> 50, FontColor -> 
    RGBColor[0.1843137254901961, 0.6509803921568628, 0.6941176470588235]], 
   Cell[
    StyleData["Section"], CellFrame -> {{0, 0}, {0, 1}}, ShowCellBracket -> 
    False, ShowGroupOpener -> False, 
    CellMargins -> {{66, 30}, {Inherited, 35}}, Deployed -> True, 
    CellFrameMargins -> {{0, Inherited}, {Inherited, 10}}, CellFrameColor -> 
    GrayLevel[0.7137], FontFamily -> "Source Sans Pro", FontSize -> 17, 
    FontWeight -> "DemiBold", FontColor -> Hue[0.51, 0.817, 0.72]], 
   Cell[
    StyleData["SectionNoLine", StyleDefinitions -> StyleData["Section"]], 
    CellFrame -> {{0, 0}, {0, 0}}, CellMargins -> {{49, 30}, {4, 0}}], 
   Cell[
    StyleData["SectionOnlyLine", StyleDefinitions -> StyleData["Section"]], 
    CellMargins -> {{66, 30}, {4, 35}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, CellFrameMargins -> 0, 
    FontSize -> 0.1], 
   Cell[
    StyleData["Subsection", StyleDefinitions -> StyleData["Section"]], 
    ShowCellBracket -> True, ShowGroupOpener -> True, WholeCellGroupOpener -> 
    True], 
   Cell[
    StyleData["Text"], ShowCellBracket -> True, 
    CellMargins -> {{66, 30}, {Inherited, Inherited}}, FontFamily -> 
    "Source Sans Pro", FontSize -> 16, FontWeight -> "Regular", FontSlant -> 
    "Plain", PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
    FontColor -> 
    RGBColor[0.3254901960784314, 0.3254901960784314, 0.3254901960784314]], 
   Cell[
    StyleData["Item"], CellDingbat -> 
    StyleBox["\[FilledSmallSquare]", Alignment -> Baseline, 
      RGBColor[0.21176470588235294`, 0.6941176470588235, 0.7490196078431373]],
     CellMargins -> {{81, 30}, {Inherited, Inherited}}, FontFamily -> 
    "Source Sans Pro", FontSize -> 16, FontWeight -> "Regular", FontSlant -> 
    "Plain", PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, 
    FontColor -> 
    RGBColor[0.3254901960784314, 0.3254901960784314, 0.3254901960784314]], 
   Cell[
    StyleData["Description"], ShowCellBracket -> False, 
    CellMargins -> {{71, 30}, {0, 10}}, 
    AutoStyleOptions -> {
     "LocalVariableStyle" -> {FontColor -> RGBColor[0.263, 0.537, 0.345]}}, 
    LineSpacing -> {1.2, 0}, FontFamily -> "Source Sans Pro", FontSize -> 20, 
    FontSlant -> "Plain", 
    PrivateFontOptions -> {"FontPostScriptName" -> "Automatic"}, FontColor -> 
    GrayLevel[0.3]], 
   Cell[
    StyleData["WCIntroDivider"], Editable -> False, Selectable -> False, 
    Deletable -> False, ShowCellBracket -> False, 
    CellMargins -> {{66, 30}, {-2, 35}}, ShowStringCharacters -> False], 
   Cell[
    StyleData["WCIntroDividerLine", StyleDefinitions -> StyleData["Text"]], 
    Editable -> False, Selectable -> False, Deletable -> False, 
    CellFrame -> {{0, 0}, {0, 8}}, ShowCellBracket -> False, 
    CellMargins -> {{66, 30}, {15, 0}}, 
    CellElementSpacings -> {"CellMinHeight" -> 1}, 
    CellFrameMargins -> {{0, 0}, {-1, 0}}, CellFrameColor -> 
    RGBColor[0.9961, 0.3098, 0.21569], FontSize -> 1], 
   Cell[
    StyleData["SubmitRow"], Editable -> False, Selectable -> False, Deletable -> 
    False, CellFrame -> {{0, 0}, {0, 2}}, ShowCellBracket -> False, 
    CellMargins -> {{66, 30}, {15, 30}}, 
    CellGroupingRules -> {"SectionGrouping", -5}, 
    CellFrameMargins -> {{Inherited, Inherited}, {20, 20}}, CellFrameColor -> 
    RGBColor[0.996078431372549, 0.3058823529411765, 0.21568627450980393`]], 
   Cell[
    StyleData["StandardForm"], FontSize -> 16], 
   Cell[
    StyleData["CodeFont"], FontSize -> 
    FEPrivate`If[False, 0.907029 Inherited, Inherited]], 
   Cell[
    StyleData["RefLink"], TemplateBoxOptions -> {DisplayFunction :> (TagBox[
        ButtonBox[#, ButtonData -> #2, BaseStyle -> Dynamic[
           If[
            CurrentValue["MouseOver"], {
            "Link", FontColor -> RGBColor[0.854902, 0.396078, 0.145098]}, {
            "Link"}]]], 
        MouseAppearanceTag["LinkHand"]]& )}, 
    ButtonBoxOptions -> {BaseStyle -> "Link"}], 
   Cell[
    StyleData["InlineCode", StyleDefinitions -> StyleData["StandardForm"]]], 
   Cell[
    StyleData["SmallText", StyleDefinitions -> StyleData["Text"]], FontSize -> 
    0.975 Inherited, FontColor -> GrayLevel[0.25]], 
   Cell[
    StyleData["Hyperlink"], FontColor -> 
    RGBColor[0.21176470588235294`, 0.7058823529411765, 0.7490196078431373]], 
   Cell[
    StyleData["HyperlinkActive"], FontColor -> 
    RGBColor[0.996078431372549, 0.3058823529411765, 0.21568627450980393`]], 
   Cell[
    StyleData["SubmitButton"], ShowCellBracket -> False, 
    CellMargins -> {{66, Inherited}, {25, Inherited}}, ShowCellLabel -> False,
     TextAlignment -> Center, ShowStringCharacters -> False], 
   Cell[
    StyleData["SigninText", StyleDefinitions -> StyleData["Text"]], 
    ShowStringCharacters -> False, FontSize -> 12, FontColor -> 
    GrayLevel[0.25]], 
   Cell[
    StyleData["ButtonLabel", StyleDefinitions -> StyleData["Text"]], 
    TextAlignment -> Center, ShowStringCharacters -> False, FontFamily -> 
    "Source Sans Pro", FontSize -> 18, FontWeight -> "DemiBold", FontColor -> 
    GrayLevel[1]], 
   Cell[
    StyleData[
    "ButtonLabelActive", StyleDefinitions -> StyleData["ButtonLabel"]], 
    TextAlignment -> Center, ShowStringCharacters -> False, FontColor -> 
    RGBColor[0.996078431372549, 0.3058823529411765, 0.21568627450980393`]], 
   Cell[
    StyleData["Notebook"], ShowAutoSpellCheck -> False]}, Visible -> False, 
  FrontEndVersion -> 
  "12.1 for Microsoft Windows (64-bit) (2020\:5e743\:670814\:65e5)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"],
ExpressionUUID->"1aeab103-4aa4-425c-b492-8f2a0ba314a5"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "NoLabel"->{
  Cell[66884, 1659, 171, 2, 32, "Input",ExpressionUUID->"cbecc616-382c-41a4-89c3-36b0cb3a7c59",
   CellTags->"NoLabel"],
  Cell[67820, 1687, 2991, 75, 401, "Input",ExpressionUUID->"969821b3-a656-4e9a-854d-67933530f6d4",
   CellTags->"NoLabel"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"NoLabel", 128139, 2891}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 101, 0, 94, "Title",ExpressionUUID->"3faf7c78-257d-45f3-a607-fb2df752ccaf"],
Cell[684, 24, 691, 21, 69, "WCIntroDivider",ExpressionUUID->"10e2ac5a-f097-49a2-9f69-edebb552a9c7"],
Cell[1378, 47, 85, 0, 26, "WCIntroDividerLine",ExpressionUUID->"401d4a3a-0bd6-4398-b096-fde48478d0c7"],
Cell[1466, 49, 151, 2, 36, "Description",ExpressionUUID->"9a83591c-2080-41db-8aab-066a55382070"],
Cell[CellGroupData[{
Cell[1642, 55, 86, 0, 72, "Section",ExpressionUUID->"08fc7818-1e8c-49c7-9839-4aca148bbc5a"],
Cell[1731, 57, 237, 4, 30, "Text",ExpressionUUID->"20301806-cb1c-4eb2-903a-05843e9cf9f7"],
Cell[1971, 63, 198, 3, 30, "Text",ExpressionUUID->"062cd0f3-45a1-4599-ae83-328fb5f9c095"],
Cell[CellGroupData[{
Cell[2194, 70, 337, 10, 46, "Input",ExpressionUUID->"c15d1859-20d5-456e-840f-217561c5d84d",
 Evaluatable->False],
Cell[2534, 82, 728, 19, 33, "Output",ExpressionUUID->"58dcbae6-5345-400a-897e-c1ecf72e30a8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3299, 106, 334, 9, 46, "Input",ExpressionUUID->"ae8ec7f3-fef1-4786-969c-08368908b117",
 Evaluatable->False],
Cell[3636, 117, 1086, 28, 233, "Output",ExpressionUUID->"1d2064de-0aab-4661-bd71-c42bc612e47c"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4771, 151, 102, 0, 72, "Section",ExpressionUUID->"2d6bbd58-2f22-4b6c-bbf7-301634bc0c1a"],
Cell[4876, 153, 373, 6, 55, "Text",ExpressionUUID->"ebd49c4e-c4da-4def-ad52-1ce75967891e"],
Cell[CellGroupData[{
Cell[5274, 163, 401, 13, 29, "Input",ExpressionUUID->"3fba8b09-eafd-4e5b-a79f-5bcbd18344a8",
 Evaluatable->False],
Cell[5678, 178, 150, 3, 33, "Output",ExpressionUUID->"735fc8a5-1743-4094-860b-830f0b5d7b32"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5865, 186, 471, 14, 29, "Input",ExpressionUUID->"3f35f0aa-3db9-45c3-a240-5ed07b7764f1",
 Evaluatable->False],
Cell[6339, 202, 151, 3, 33, "Output",ExpressionUUID->"247047ac-00fb-41ac-8f8a-bcfdb99e2a50"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6527, 210, 416, 13, 29, "Input",ExpressionUUID->"0992377a-79e6-419b-9c72-de1ff0da659b",
 Evaluatable->False],
Cell[6946, 225, 150, 3, 33, "Output",ExpressionUUID->"d36d86da-aaff-47aa-9be6-07c637d02194"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[7145, 234, 90, 0, 72, "Subsection",ExpressionUUID->"6614c76b-3cff-4e3b-8fae-31969d8119b5"],
Cell[7238, 236, 209, 3, 30, "Text",ExpressionUUID->"0e378035-87a9-4019-b1d9-e725d1a1534f"],
Cell[CellGroupData[{
Cell[7472, 243, 471, 14, 29, "Input",ExpressionUUID->"7653e421-dde5-40c3-be44-ca77fd563864",
 Evaluatable->False],
Cell[7946, 259, 151, 3, 33, "Output",ExpressionUUID->"eb3b5d32-01af-4dab-a4b3-7feeed8e1c54"]
}, Open  ]],
Cell[8112, 265, 227, 3, 30, "Text",ExpressionUUID->"cf2c8eb7-cb0f-435b-9462-50a2f6c5719e"],
Cell[CellGroupData[{
Cell[8364, 272, 472, 14, 29, "Input",ExpressionUUID->"acb71fda-91de-4ddf-b426-5632eb674075",
 Evaluatable->False],
Cell[8839, 288, 152, 3, 33, "Output",ExpressionUUID->"dfcab146-3a3c-4678-970a-f1c71426cd3d"]
}, Open  ]],
Cell[9006, 294, 320, 9, 30, "Text",ExpressionUUID->"61c438f1-7285-49e8-8450-78ece85b0338"],
Cell[CellGroupData[{
Cell[9351, 307, 472, 14, 29, "Input",ExpressionUUID->"179ee1d0-ca61-4e04-8e7b-6aa107a14099",
 Evaluatable->False],
Cell[9826, 323, 150, 3, 33, "Output",ExpressionUUID->"184a03f5-9e9b-428d-baf0-83a704cf3117"]
}, Open  ]],
Cell[9991, 329, 145, 2, 30, "Text",ExpressionUUID->"84ca604e-8dd3-4ae9-ae08-604f47c0f636"],
Cell[CellGroupData[{
Cell[10161, 335, 435, 13, 29, "Input",ExpressionUUID->"2a556dd4-0e8e-4562-afb4-6c8eb4799332",
 Evaluatable->False],
Cell[10599, 350, 150, 3, 33, "Output",ExpressionUUID->"c278d726-4705-4675-8be4-cf8a4be6fbdb"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10786, 358, 535, 15, 46, "Input",ExpressionUUID->"00e4ff64-f1f8-4795-ac53-c4ec4a121b0b",
 Evaluatable->False],
Cell[11324, 375, 1640, 35, 233, "Output",ExpressionUUID->"b1892183-e3a7-4048-a951-336a2b82a453"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13013, 416, 100, 0, 72, "Section",ExpressionUUID->"1df93852-8c60-4211-aa36-10ba536c0dd0"],
Cell[13116, 418, 534, 9, 31, "Text",ExpressionUUID->"803df727-a6b0-4a89-95ca-7089d483e922"],
Cell[13653, 429, 291, 6, 30, "Text",ExpressionUUID->"4dd90141-ff3a-4a69-876e-10bddf0a176a"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[13993, 441, 685, 22, 64, "WCIntroDivider",ExpressionUUID->"309bd27c-1285-4198-b394-278d1b30fb0c",
 CellGroupingRules->{"SectionGrouping", 0}],
Cell[14681, 465, 131, 2, 42, "WCIntroDividerLine",ExpressionUUID->"101f5e0b-335e-4b54-89a8-41cd2717833b"],
Cell[CellGroupData[{
Cell[14837, 471, 503, 8, 32, "Input",ExpressionUUID->"5b7df2eb-f973-476a-9286-31a5212bda28"],
Cell[15343, 481, 301, 5, 36, "Output",ExpressionUUID->"4ab5ecef-c6b9-43e0-a090-2cf41009e2e0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15681, 491, 686, 13, 32, "Input",ExpressionUUID->"ba9db661-6341-4cab-b978-3243e4ea77bd"],
Cell[16370, 506, 517, 10, 36, "Output",ExpressionUUID->"fd0f6478-4f15-4eca-9d4d-8338ddaeec59"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16924, 521, 503, 8, 32, "Input",ExpressionUUID->"64b76381-0365-4818-aef2-65a283fa46ec"],
Cell[17430, 531, 299, 5, 59, "Output",ExpressionUUID->"e723a1c8-cd8f-4cac-a181-8fcc62b83bc8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17766, 541, 219, 5, 50, "Input",ExpressionUUID->"5bc9f025-2f38-4adb-ae5d-74decece4878"],
Cell[17988, 548, 34544, 732, 1765, "Output",ExpressionUUID->"59dfc9c2-2571-4e77-a34d-8c1f56f1c628"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52569, 1285, 261, 6, 50, "Input",ExpressionUUID->"d42434bd-071c-4c23-ae4b-6d5d78876d71"],
Cell[52833, 1293, 2685, 55, 974, "Output",ExpressionUUID->"8571c374-eb66-4bac-aa45-591b3669acbd"]
}, Open  ]],
Cell[CellGroupData[{
Cell[55555, 1353, 583, 13, 50, "Input",ExpressionUUID->"7d96587c-6a51-4b28-986e-0d943eb114d3"],
Cell[56141, 1368, 330, 6, 36, "Output",ExpressionUUID->"4e71bb8a-5d2a-45d1-9ce8-77bf3e36fd1e"]
}, Open  ]],
Cell[CellGroupData[{
Cell[56508, 1379, 747, 18, 50, "Input",ExpressionUUID->"b0d14a87-06ae-4a06-831b-d14c91c89e55"],
Cell[57258, 1399, 357, 6, 36, "Output",ExpressionUUID->"c1902422-156f-4d25-aeef-e995e3889a57"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57652, 1410, 286, 6, 32, "Input",ExpressionUUID->"aace8b21-3f5a-4830-9a22-0f80976a5257"],
Cell[57941, 1418, 202, 4, 36, "Output",ExpressionUUID->"db88d957-0ef4-4d99-963e-c33e7f7c5c22"]
}, Open  ]],
Cell[CellGroupData[{
Cell[58180, 1427, 354, 8, 32, "Input",ExpressionUUID->"3ec6b4ce-a949-4db3-b959-915ecd34bfb5"],
Cell[58537, 1437, 283, 5, 36, "Output",ExpressionUUID->"eacbd60d-e4ef-4128-9054-5471dbb6c399"]
}, Open  ]],
Cell[58835, 1445, 209, 5, 32, "Input",ExpressionUUID->"5c09b165-9088-44bf-bc39-9c54b8aff5c8"],
Cell[CellGroupData[{
Cell[59069, 1454, 3097, 72, 357, "Input",ExpressionUUID->"700be6dd-3e8d-4d33-b447-8c2cbd2314ed"],
Cell[62169, 1528, 354, 6, 36, "Output",ExpressionUUID->"9a0fedbd-3433-4bb5-85f5-30980413ac58"]
}, Open  ]],
Cell[62538, 1537, 199, 4, 32, "Input",ExpressionUUID->"3a011f48-07a2-45f0-abe6-94ca59b74f58"],
Cell[62740, 1543, 207, 5, 32, "Input",ExpressionUUID->"8d74c7fa-423a-4a86-a668-67c4e80e5286"],
Cell[CellGroupData[{
Cell[62972, 1552, 2419, 64, 276, InheritFromParent,ExpressionUUID->"45c9c03b-f0db-4c81-ad2a-6a09071a1b71"],
Cell[65394, 1618, 210, 4, 36, "Output",ExpressionUUID->"55ce795c-5bb1-43fb-8ed5-d6948e287ffe"]
}, Open  ]],
Cell[65619, 1625, 379, 6, 32, "Input",ExpressionUUID->"55fd2968-1b2d-4703-ad17-f10930c39baf"],
Cell[66001, 1633, 154, 3, 28, InheritFromParent,ExpressionUUID->"619f83ef-60d9-44dc-a1f4-be403fbc1188"],
Cell[66158, 1638, 152, 3, 28, InheritFromParent,ExpressionUUID->"868136e3-ac84-4dad-9a5b-b71db6b9ca9c"],
Cell[66313, 1643, 231, 4, 32, "Input",ExpressionUUID->"adbd4262-9da2-4bc1-a594-bf47a59dcb74"],
Cell[66547, 1649, 154, 3, 28, InheritFromParent,ExpressionUUID->"fbb6c888-6f05-42f3-8d0b-6ebcf49d4d50"],
Cell[66704, 1654, 177, 3, 28, InheritFromParent,ExpressionUUID->"1fcd6e76-13d7-40fa-a15e-9f59173062eb"],
Cell[66884, 1659, 171, 2, 32, "Input",ExpressionUUID->"cbecc616-382c-41a4-89c3-36b0cb3a7c59",
 CellTags->"NoLabel"],
Cell[67058, 1663, 662, 20, 67, "WCIntroDivider",ExpressionUUID->"90c48f74-1f13-4066-be41-ecfd3e71be8a"],
Cell[67723, 1685, 94, 0, 42, "WCIntroDividerLine",ExpressionUUID->"dcc306c6-26a6-4509-8ed5-e661ef06ce3e"],
Cell[67820, 1687, 2991, 75, 401, "Input",ExpressionUUID->"969821b3-a656-4e9a-854d-67933530f6d4",
 CellTags->"NoLabel"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70848, 1767, 9326, 200, 105, "SubmitRow",ExpressionUUID->"53ffca23-b93a-441a-9959-2050b3791819"],
Cell[80177, 1969, 32704, 630, 795, "Print",ExpressionUUID->"9b0509b0-9922-4fdd-942d-bae9abc32a15"]
}, Open  ]]
}
]
*)

